let matmul = proc(
    a: list (list int lab{L1} eps{e1} 3) 3
    b: list (list int lab{L2} eps{e2} 3) 3
) -> list (list int lab{L1} eps{e2} 3) 3
    [
        [
            a[0][0] * declassify(b[0][0], e2, L1, e1) +
            a[0][1] * declassify(b[1][0], e2, L1, e1) +
            a[0][2] * declassify(b[2][0], e2, L1, e1),
            a[0][0] * declassify(b[0][1], e2, L1, e1) +
            a[0][1] * declassify(b[1][1], e2, L1, e1) +
            a[0][2] * declassify(b[2][1], e2, L1, e1),
            a[0][0] * declassify(b[0][2], e2, L1, e1) +
            a[0][1] * declassify(b[1][2], e2, L1, e1) +
            a[0][2] * declassify(b[2][2], e2, L1, e1)
        ],
        [
            a[1][0] * declassify(b[0][0], e2, L1, e1) +
            a[1][1] * declassify(b[1][0], e2, L1, e1) +
            a[1][2] * declassify(b[2][0], e2, L1, e1),
            a[1][0] * declassify(b[0][1], e2, L1, e1) +
            a[1][1] * declassify(b[1][1], e2, L1, e1) +
            a[1][2] * declassify(b[2][1], e2, L1, e1),
            a[1][0] * declassify(b[0][2], e2, L1, e1) +
            a[1][1] * declassify(b[1][2], e2, L1, e1) +
            a[1][2] * declassify(b[2][2], e2, L1, e1)
        ],
        [
            a[2][0] * declassify(b[0][0], e2, L1, e1) +
            a[2][1] * declassify(b[1][0], e2, L1, e1) +
            a[2][2] * declassify(b[2][0], e2, L1, e1),
            a[2][0] * declassify(b[0][1], e2, L1, e1) +
            a[2][1] * declassify(b[1][1], e2, L1, e1) +
            a[2][2] * declassify(b[2][1], e2, L1, e1),
            a[2][0] * declassify(b[0][2], e2, L1, e1) +
            a[2][1] * declassify(b[1][2], e2, L1, e1) +
            a[2][2] * declassify(b[2][2], e2, L1, e1)
        ]
    ]
in let flatten = proc(
    xs: list (list int lab{L1} eps{e1} 3) 3
) -> list int lab{L1} eps{e1} 9
    [
        xs[0][0], xs[0][1], xs[0][2],
        xs[1][0], xs[1][1], xs[1][2],
        xs[2][0], xs[2][1], xs[2][2]
    ]
in let add_all = proc(
    xs: list int lab{L1} eps{e1} 9
) -> int lab{L1} eps{e1} for x in xs index i accum s = 0 do
    s + x
in declassify(add_all(flatten(matmul(
    [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]
    ],
    [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]
    ]
))), e1, Public, 0)