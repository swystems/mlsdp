let matmul = proc(
    a: list (list int lab{L1} eps{e1} 16) 16
    b: list (list int lab{L2} eps{e2} 16) 16
) -> list (list int lab{L1} eps{e2} 16) 16
    [for i in 0..16:
        [for j in 0..16:
            a[i][j] * declassify(b[j][i], e2, L1, e1)]]
in let flatten_to_pub = proc(
    xs: list (list int lab{L1} eps{e1} 16) 16
) -> list int lab{Public} eps{0} 256
    [for i in 0..256: declassify(xs[i/16][i%16], e1, Public, 0)]
in let add_all = proc(
    xs: list int 256
) -> int for x in xs index i accum s = 0 do s + x
in add_all(flatten_to_pub(matmul(
    [for i in 0..16: [for j in 0..16: i * 16 + j]],
    [for i in 0..16: [for j in 0..16: (j * 16 + i)]]
)))